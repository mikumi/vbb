/* @PROB@.n.cfs */
/* Konfiguration fuer n Transputer (n aus [1, 2, 3, 4, 8]) */
/* fuer Supercluster mit T800 je 4 MB */

/* Folgende Zeile auskommentieren fuer icc auf sibelius */
/* #include "setconf.inc" */

val	n		2;	/* Anzahl Transputer	*/
val	nr_of_links	1;	/* Anzahl verwendeter Links */

processor (type = "T800", memory = 4M) transp[n];

/* Baue Kreis auf (ohne Schlussglied): */
rep i = 0 to n - 2
   {
    connect transp[i].link[1] to transp[i + 1].link[2];
   }

/* Root-Transputer an Host anschliessen: */
connect transp[0].link[0] to host;

/* Interface festlegen fuer root Prozess: */
if (n == 1)
   {
    /* Braucht einen Dummy-Kanal, geht sonst nicht wg. Syntax: */
    define process (heapsize = 3850K, stacksize = 100K, 
	     interface (input	from_server,
			output	to_server,
			int	cpu_nr,
			input	in[1],
			output	out[1],
			int	nr_of_chans = 0,
			int	nr_of_cpus = 1)
	    )root_proc;
   }
else
   {
    define process (heapsize = 3850K, stacksize = 100K, 
	     interface (input	from_server,
			output	to_server,
			int	cpu_nr,
			input	in[nr_of_links],
			output	out[nr_of_links],
			int	nr_of_chans = nr_of_links,
			int	nr_of_cpus = n)
	    )root_proc;
   }

/* Interface festlegen fuer Slave Prozesse: */
if (n > 1)
   {
    /* Slave hat dummies statt Host-Channels: */
    define process (heapsize = 3850K, stacksize = 100K, 
	     interface (int	dummy1 = 0,
			int	dummy2 = 0,
			int	cpu_nr,
			input	in[nr_of_links],
			output	out[nr_of_links],
			int	nr_of_chans = nr_of_links,
			int	nr_of_cpus = n)
	    )slave_proc;
   }


/* Prozesse Root und Slaves definieren: */
root_proc	(cpu_nr = 0) root;
if (n > 1)
   {
    slave_proc	             slave[n - 1];
   }
rep i = 0 to n - 2
   {
    slave[i] (cpu_nr = i + 1);
   }

/* Verbindungen zur Aussenwelt definieren:: */
input	host_inp;
output	host_outp;

/* Root an Host anschliessen: */
connect root.from_server 	to host_inp;
connect root.to_server 	to host_outp;

/* Soft-Kanaele zwischen Transputern verbinden: */
if (n == 2)
   {
    connect	root.out[0]	to slave[0].in[0];
    connect	root.in[0]	to slave[0].out[0];
   }

/* Ordne Prozesse auf Transputern an: */
use "@DIR@/@PROB@.lku" for root;
place root on transp[0];
rep i = 0 to n - 2
   {
    use "@DIR@/@PROB@.red.lku" for slave[i];
    place slave[i] on transp[i + 1];
   }

/* Verbinde Root-Transputer explizit mit Host: */
place root.from_server on transp[0].link[0];
place root.to_server on transp[0].link[0];

